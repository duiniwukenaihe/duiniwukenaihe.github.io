I"F$<ul id="markdown-toc">
  <li><a href="#描述背景" id="markdown-toc-描述背景">描述背景：</a></li>
  <li><a href="#安装jenkins" id="markdown-toc-安装jenkins">安装jenkins</a>    <ul>
      <li><a href="#登陆jenkins初始化配置" id="markdown-toc-登陆jenkins初始化配置">登陆jenkins。初始化配置</a></li>
    </ul>
  </li>
</ul>

<h1 id="描述背景">描述背景：</h1>
<p>注：kubernetes基本环境搭建完成，存储rook-ceph，rbd方式。代码仓库gitlab,容器仓库harbor,监控prometheus，负载方式都用了内部clusterip然后 traefik代理的方式。为了完善工具链，容器中搭建jenkins工具。</p>

<p>集群配置：
初始集群环境kubeadm 1.16.1</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">ip</th>
      <th style="text-align: center">自定义域名</th>
      <th style="text-align: center">主机名</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">192.168.3.8</td>
      <td style="text-align: center">master.k8s.io</td>
      <td style="text-align: center">k8s-vip</td>
    </tr>
    <tr>
      <td style="text-align: center">192.168.3.10</td>
      <td style="text-align: center">master01.k8s.io</td>
      <td style="text-align: center">k8s-master-01</td>
    </tr>
    <tr>
      <td style="text-align: center">192.168.3.5</td>
      <td style="text-align: center">master02.k8s.io</td>
      <td style="text-align: center">k8s-master-02</td>
    </tr>
    <tr>
      <td style="text-align: center">192.168.3.12</td>
      <td style="text-align: center">master03.k8s.io</td>
      <td style="text-align: center">k8s-master-03</td>
    </tr>
    <tr>
      <td style="text-align: center">192.168.3.6</td>
      <td style="text-align: center">node01.k8s.io</td>
      <td style="text-align: center">k8s-node-01</td>
    </tr>
    <tr>
      <td style="text-align: center">192.168.3.2</td>
      <td style="text-align: center">node02.k8s.io</td>
      <td style="text-align: center">k8s-node-02</td>
    </tr>
    <tr>
      <td style="text-align: center">192.168.3.4</td>
      <td style="text-align: center">node03.k8s.io</td>
      <td style="text-align: center">k8s-node-03</td>
    </tr>
  </tbody>
</table>

<h1 id="安装jenkins">安装jenkins</h1>
<blockquote>
  <ol>
    <li>建立命名空间
      <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl create namespace kube-ops
注：后续所有工具类应用程序都创建在此命名空间内。
</code></pre></div>      </div>
      <hr />
    </li>
    <li>创建ServiceAccount &amp; ClusterRoleBinding</li>
  </ol>
</blockquote>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>注：都是用的默认的，权限的管理还没有深入进行学习下。

<span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh"> &gt; rabc.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins2
  namespace: kube-ops
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: jenkins2
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["create", "delete", "get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get","list","watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: jenkins2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins2
subjects:
  - kind: ServiceAccount
    name: jenkins2
    namespace: kube-ops
</span><span class="no">EOF
</span>kubectl apply <span class="nt">-f</span> rabc.yaml
</code></pre></div></div>

<blockquote>
  <p>3.deployment jenkins</p>
</blockquote>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh"> &gt; jenkins.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: opspvc
  labels:
    app: jenkins2
  namespace: kube-ops
spec:
  storageClassName: rook-ceph-block
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins2
  namespace: kube-ops
spec:
  selector:
    matchLabels:
      app: jenkins2
  template:
    metadata:
      labels:
        app: jenkins2
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: jenkins2
      containers:
      - name: jenkins
        image: jenkins/jenkins:lts
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        - containerPort: 50000
          name: agent
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 12
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 12
        volumeMounts:
        - name: jenkinshome
          subPath: jenkins2
          mountPath: /var/jenkins_home
        env:
        - name: LIMITS_MEMORY
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: 1Mi
        - name: JAVA_OPTS
          value: -Xmx</span><span class="si">$(</span>LIMITS_MEMORY<span class="si">)</span><span class="sh">m -XshowSettings:vm -Dhudson.slaves.NodeProvisioner.initialDelay=0 -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85 -Duser.timezone=Asia/Shanghai
      securityContext:
        fsGroup: 1000
      volumes:
      - name: jenkinshome
        persistentVolumeClaim:
          claimName: opspvc

---
apiVersion: v1
kind: Service
metadata:
  name: jenkins2
  namespace: kube-ops
  labels:
    app: jenkins2
spec:
  selector:
    app: jenkins2
  ports:
  - name: web
    port: 8080
    targetPort: web
  - name: agent
    port: 50000
    targetPort: agent
</span><span class="no">EOF
</span>kubectl apply <span class="nt">-f</span> jenkins.yaml
注： kubernetes 1.16 取消了extensions/v1beta1 api，使用apps/v1。
</code></pre></div></div>
<p><img src="/assets/images/jenkins/deployment.png" alt="deployment.png" /></p>
<blockquote>
  <p>4.traefik对外暴露服务</p>
  <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh"> &gt; ingress.yaml
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  namespace: kube-ops
  name: jenkins2-https
spec:
  entryPoints:
    - websecure
  tls:
    secretName: all-saynaihe-com
  routes:
    - match: Host(</span><span class="se">\`</span><span class="sh">jenkins.sainaihe.com</span><span class="se">\`</span><span class="sh">)
      kind: Rule
      services:
        - name: jenkins2
          port: 8080
</span><span class="no">EOF
</span>kubectl apply <span class="nt">-f</span> ingress.yaml
</code></pre></div>  </div>
  <p><img src="/assets/images/jenkins/ingressroute.png" alt="ingressroute.png" />
<img src="/assets/images/jenkins/traefik.png" alt="traefik.png" /></p>
  <h2 id="登陆jenkins初始化配置">登陆jenkins。初始化配置</h2>
  <ol>
    <li>访问 https://jenkins.saynaihe.com,出现：
<img src="/assets/images/jenkins/jenkins1.png" alt="jenkins1.png" />
获取初始密码
      <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl <span class="nb">exec</span> <span class="nt">-it</span> jenkins2-9f55b98b6-xtffb <span class="nb">cat</span> /var/jenkins_home/secrets/initialAdminPassword <span class="nt">-n</span> kube-ops
</code></pre></div>      </div>
      <p><img src="/assets/images/jenkins/jenkins2.png" alt="jenkins2.png" /></p>
    </li>
    <li>设置管理员账号密码，进入登陆界面
<img src="/assets/images/jenkins/jenkins3.png" alt="jenkins3.png" /></li>
    <li>安装插件，安装了中文插件，pipeline，gitlab,git,github 参数化插件等，看个人需要安装吧。
<img src="/assets/images/jenkins/jenkins4.png" alt="jenkins4.png" />
<img src="/assets/images/jenkins/jenkins5.png" alt="jenkins5.png" />
注：因为国外源不稳定 国内有其他备用源可以切换比如清华的源。jenkins中文社区有篇文章：https://mp.weixin.qq.com/s/rqx93WI0UEvzqaFrt84i8A可以参考。</li>
  </ol>
</blockquote>
:ET